//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Input.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;
using Object = UnityEngine.Object;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Input"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""28edff05-adaf-4af1-b5cd-6c5f457d4e60"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""9c8a9cf0-4f37-4a99-b8a6-dc66c3083263"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Sneak"",
                    ""type"": ""Button"",
                    ""id"": ""8e7229dd-21ae-4c86-83df-3a9b17eeeb1c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""5c340f27-82e5-48b2-96b5-76a34479660d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""5b60051c-74a9-4bb6-976a-e97eabc485ed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3fb64fb3-5bd0-4032-810d-9e25ccb7264c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""b5b1cc26-e779-43bc-831b-1a14ca2565a6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseItem"",
                    ""type"": ""Button"",
                    ""id"": ""b6956a7c-e5c2-4549-94f3-520caa4e2b44"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""81a50b4e-031d-4a17-8879-83c219c1aa04"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9bfda8ae-a822-47f7-82b8-ef6b6e559de1"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8641edd3-a413-4a15-9256-2ceb3008d0bf"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5143fb43-e1b9-4a72-9f52-d2ac0fe1013f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""87974678-3358-4f7b-9f4d-50a4988748ea"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""d7f9921b-77c7-4221-9663-e3ed9cb107fa"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a197679d-d55a-4b8f-aea6-d4de571dd723"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""07f16c25-62ab-4881-86f7-a10f57ea35a5"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d59396bf-3aae-4de8-92d9-fa8bf91a4a0d"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fea63a41-9d20-492a-b0a8-c340bc392165"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad Stick"",
                    ""id"": ""451f537b-1c85-4ece-863d-893b38909a9e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""711735a4-e1a5-411d-93dd-730dd58a71b0"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b35a80c0-e501-43cd-abe0-4c9d08247469"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""45c35e7c-6353-4131-bda3-e446cefb83f3"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ab92c782-31ed-4578-a025-115fd2df41e7"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""cb8e2080-058d-4655-847f-d9769a1f5583"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sneak"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5402245-7777-45d1-baeb-ce02c7b17961"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sneak"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""78a7eed4-555b-422d-883b-dbb1e2e85892"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6be11fc4-2ac8-4c15-8c85-e4213f431d10"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""510ab1cf-e694-4de8-a6bb-1df254245212"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""652b712a-5a4d-4ab5-834a-119fd8be9187"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1da91338-86a5-4e91-87d3-7eec6bf6f31a"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f7d698c-56b0-440c-90ec-a13e6cdc6d66"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c7e9c370-7c39-47e3-9f0f-d3a014aa8e42"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fe70dc31-d062-4ecb-92e6-654ca7bea10d"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f16c175-f3b0-44a2-a447-38a601dc506a"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b4c6bf2-acdb-4b08-801a-0a7b0c234329"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""DialogueSelection"",
            ""id"": ""677b1112-a5c8-454f-b70c-4c36bd72a5e2"",
            ""actions"": [
                {
                    ""name"": ""ChoiceByNumbers"",
                    ""type"": ""Button"",
                    ""id"": ""a5d50a47-1f1f-461b-89e8-46e95dafe1bb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SubmitSelection"",
                    ""type"": ""Button"",
                    ""id"": ""700e86b9-df93-41f7-ae0c-478e180e3476"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectUpper"",
                    ""type"": ""Button"",
                    ""id"": ""f4bb6966-6b78-48b6-a8e4-fded4ab16386"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectBottom"",
                    ""type"": ""Button"",
                    ""id"": ""3c491bae-a21b-4ac4-8ade-db90ee6ea495"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1d4f6151-a32d-403f-ae0f-dc59a2bf9feb"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=0)"",
                    ""groups"": """",
                    ""action"": ""ChoiceByNumbers"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9972348d-fbcd-447e-8ca1-e87c5a6ff305"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": ""Scale"",
                    ""groups"": """",
                    ""action"": ""ChoiceByNumbers"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad7c4d81-b398-437e-ae94-4187202fec02"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SubmitSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7322817f-8e6f-4980-a385-6c78a55e1e08"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SubmitSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""64a4d24d-273f-4c4b-b411-e2da3859349e"",
                    ""path"": ""<Keyboard>/numpadEnter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SubmitSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8c66c78-8057-49f4-ac8c-3d51b8d4f82b"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SubmitSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b05ee9d-01b5-4484-9d73-caf3e6b9f017"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectUpper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d82a7102-1daf-4e95-84ec-b68588c74c9d"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectUpper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3759f0f4-8c01-498e-a3ec-383af3637322"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectUpper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5b4d29e-1c20-4379-8110-756a9fe38599"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectUpper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e7f00bed-a5ee-463c-a475-13224fd356c4"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectBottom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a668f84b-8a23-498e-8bf0-114bb1a931df"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectBottom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d90e88ae-ab9e-47ac-b87a-8de5720f8aea"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectBottom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61392f55-043e-472e-93cd-96fc592b4d8f"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectBottom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""DialogueReading"",
            ""id"": ""09d7f20c-7979-430d-8a3c-7f8c4711609d"",
            ""actions"": [
                {
                    ""name"": ""NextLine"",
                    ""type"": ""Button"",
                    ""id"": ""cc97fa80-c5d7-4fae-bd4f-f5b2c6628f09"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""54914154-355b-4908-8313-e7e40b183399"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextLine"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c54b3e50-371f-440f-a2f0-6bfc5a52dbc1"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextLine"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""adaf4d98-571a-4d9f-88b0-c6763dc48cab"",
                    ""path"": ""<Keyboard>/numpadEnter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextLine"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34e19e1e-a3ff-423a-87fa-fa9cb6479f1c"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextLine"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c54f7e4-b9b3-409b-86f5-e4d5764513e5"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextLine"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""InventorySelect"",
            ""id"": ""13f12adc-51eb-470f-bb77-14d1c70503ad"",
            ""actions"": [
                {
                    ""name"": ""SelectByNumbers"",
                    ""type"": ""Button"",
                    ""id"": ""33179487-0664-4d52-b74e-11b86db0257d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseWheel"",
                    ""type"": ""Value"",
                    ""id"": ""de396dcd-e014-42ec-b236-5798a185504c"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0a899ee9-ad1d-49a4-9727-fe7d5bc5c527"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=0)"",
                    ""groups"": """",
                    ""action"": ""SelectByNumbers"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1fe37ad-6011-4083-a245-79875826fb17"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": ""Scale"",
                    ""groups"": """",
                    ""action"": ""SelectByNumbers"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3350e9c9-8574-42b6-881f-5f3a38338f22"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=2)"",
                    ""groups"": """",
                    ""action"": ""SelectByNumbers"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""011e7d47-4c90-4b6b-9627-5933f20274d4"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=3)"",
                    ""groups"": """",
                    ""action"": ""SelectByNumbers"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Scroll"",
                    ""id"": ""2cef7ee6-2ca7-45fb-905e-fc21bb73c402"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseWheel"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""9134213c-85e5-4fba-82ed-e4368d9c8ec7"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""a03c5003-dc66-449e-b63e-793fbf86ba91"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_Sneak = m_Player.FindAction("Sneak", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Run = m_Player.FindAction("Run", throwIfNotFound: true);
        m_Player_Camera = m_Player.FindAction("Camera", throwIfNotFound: true);
        m_Player_Interaction = m_Player.FindAction("Interaction", throwIfNotFound: true);
        m_Player_UseItem = m_Player.FindAction("UseItem", throwIfNotFound: true);
        // DialogueSelection
        m_DialogueSelection = asset.FindActionMap("DialogueSelection", throwIfNotFound: true);
        m_DialogueSelection_ChoiceByNumbers = m_DialogueSelection.FindAction("ChoiceByNumbers", throwIfNotFound: true);
        m_DialogueSelection_SubmitSelection = m_DialogueSelection.FindAction("SubmitSelection", throwIfNotFound: true);
        m_DialogueSelection_SelectUpper = m_DialogueSelection.FindAction("SelectUpper", throwIfNotFound: true);
        m_DialogueSelection_SelectBottom = m_DialogueSelection.FindAction("SelectBottom", throwIfNotFound: true);
        // DialogueReading
        m_DialogueReading = asset.FindActionMap("DialogueReading", throwIfNotFound: true);
        m_DialogueReading_NextLine = m_DialogueReading.FindAction("NextLine", throwIfNotFound: true);
        // InventorySelect
        m_InventorySelect = asset.FindActionMap("InventorySelect", throwIfNotFound: true);
        m_InventorySelect_SelectByNumbers = m_InventorySelect.FindAction("SelectByNumbers", throwIfNotFound: true);
        m_InventorySelect_MouseWheel = m_InventorySelect.FindAction("MouseWheel", throwIfNotFound: true);
    }

    public void Dispose()
    {
        Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_Sneak;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Run;
    private readonly InputAction m_Player_Camera;
    private readonly InputAction m_Player_Interaction;
    private readonly InputAction m_Player_UseItem;
    public struct PlayerActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @Sneak => m_Wrapper.m_Player_Sneak;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Run => m_Wrapper.m_Player_Run;
        public InputAction @Camera => m_Wrapper.m_Player_Camera;
        public InputAction @Interaction => m_Wrapper.m_Player_Interaction;
        public InputAction @UseItem => m_Wrapper.m_Player_UseItem;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Sneak.started += instance.OnSneak;
            @Sneak.performed += instance.OnSneak;
            @Sneak.canceled += instance.OnSneak;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @Camera.started += instance.OnCamera;
            @Camera.performed += instance.OnCamera;
            @Camera.canceled += instance.OnCamera;
            @Interaction.started += instance.OnInteraction;
            @Interaction.performed += instance.OnInteraction;
            @Interaction.canceled += instance.OnInteraction;
            @UseItem.started += instance.OnUseItem;
            @UseItem.performed += instance.OnUseItem;
            @UseItem.canceled += instance.OnUseItem;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Sneak.started -= instance.OnSneak;
            @Sneak.performed -= instance.OnSneak;
            @Sneak.canceled -= instance.OnSneak;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @Camera.started -= instance.OnCamera;
            @Camera.performed -= instance.OnCamera;
            @Camera.canceled -= instance.OnCamera;
            @Interaction.started -= instance.OnInteraction;
            @Interaction.performed -= instance.OnInteraction;
            @Interaction.canceled -= instance.OnInteraction;
            @UseItem.started -= instance.OnUseItem;
            @UseItem.performed -= instance.OnUseItem;
            @UseItem.canceled -= instance.OnUseItem;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // DialogueSelection
    private readonly InputActionMap m_DialogueSelection;
    private List<IDialogueSelectionActions> m_DialogueSelectionActionsCallbackInterfaces = new List<IDialogueSelectionActions>();
    private readonly InputAction m_DialogueSelection_ChoiceByNumbers;
    private readonly InputAction m_DialogueSelection_SubmitSelection;
    private readonly InputAction m_DialogueSelection_SelectUpper;
    private readonly InputAction m_DialogueSelection_SelectBottom;
    public struct DialogueSelectionActions
    {
        private @PlayerInput m_Wrapper;
        public DialogueSelectionActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @ChoiceByNumbers => m_Wrapper.m_DialogueSelection_ChoiceByNumbers;
        public InputAction @SubmitSelection => m_Wrapper.m_DialogueSelection_SubmitSelection;
        public InputAction @SelectUpper => m_Wrapper.m_DialogueSelection_SelectUpper;
        public InputAction @SelectBottom => m_Wrapper.m_DialogueSelection_SelectBottom;
        public InputActionMap Get() { return m_Wrapper.m_DialogueSelection; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DialogueSelectionActions set) { return set.Get(); }
        public void AddCallbacks(IDialogueSelectionActions instance)
        {
            if (instance == null || m_Wrapper.m_DialogueSelectionActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DialogueSelectionActionsCallbackInterfaces.Add(instance);
            @ChoiceByNumbers.started += instance.OnChoiceByNumbers;
            @ChoiceByNumbers.performed += instance.OnChoiceByNumbers;
            @ChoiceByNumbers.canceled += instance.OnChoiceByNumbers;
            @SubmitSelection.started += instance.OnSubmitSelection;
            @SubmitSelection.performed += instance.OnSubmitSelection;
            @SubmitSelection.canceled += instance.OnSubmitSelection;
            @SelectUpper.started += instance.OnSelectUpper;
            @SelectUpper.performed += instance.OnSelectUpper;
            @SelectUpper.canceled += instance.OnSelectUpper;
            @SelectBottom.started += instance.OnSelectBottom;
            @SelectBottom.performed += instance.OnSelectBottom;
            @SelectBottom.canceled += instance.OnSelectBottom;
        }

        private void UnregisterCallbacks(IDialogueSelectionActions instance)
        {
            @ChoiceByNumbers.started -= instance.OnChoiceByNumbers;
            @ChoiceByNumbers.performed -= instance.OnChoiceByNumbers;
            @ChoiceByNumbers.canceled -= instance.OnChoiceByNumbers;
            @SubmitSelection.started -= instance.OnSubmitSelection;
            @SubmitSelection.performed -= instance.OnSubmitSelection;
            @SubmitSelection.canceled -= instance.OnSubmitSelection;
            @SelectUpper.started -= instance.OnSelectUpper;
            @SelectUpper.performed -= instance.OnSelectUpper;
            @SelectUpper.canceled -= instance.OnSelectUpper;
            @SelectBottom.started -= instance.OnSelectBottom;
            @SelectBottom.performed -= instance.OnSelectBottom;
            @SelectBottom.canceled -= instance.OnSelectBottom;
        }

        public void RemoveCallbacks(IDialogueSelectionActions instance)
        {
            if (m_Wrapper.m_DialogueSelectionActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDialogueSelectionActions instance)
        {
            foreach (var item in m_Wrapper.m_DialogueSelectionActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DialogueSelectionActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DialogueSelectionActions @DialogueSelection => new DialogueSelectionActions(this);

    // DialogueReading
    private readonly InputActionMap m_DialogueReading;
    private List<IDialogueReadingActions> m_DialogueReadingActionsCallbackInterfaces = new List<IDialogueReadingActions>();
    private readonly InputAction m_DialogueReading_NextLine;
    public struct DialogueReadingActions
    {
        private @PlayerInput m_Wrapper;
        public DialogueReadingActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @NextLine => m_Wrapper.m_DialogueReading_NextLine;
        public InputActionMap Get() { return m_Wrapper.m_DialogueReading; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DialogueReadingActions set) { return set.Get(); }
        public void AddCallbacks(IDialogueReadingActions instance)
        {
            if (instance == null || m_Wrapper.m_DialogueReadingActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DialogueReadingActionsCallbackInterfaces.Add(instance);
            @NextLine.started += instance.OnNextLine;
            @NextLine.performed += instance.OnNextLine;
            @NextLine.canceled += instance.OnNextLine;
        }

        private void UnregisterCallbacks(IDialogueReadingActions instance)
        {
            @NextLine.started -= instance.OnNextLine;
            @NextLine.performed -= instance.OnNextLine;
            @NextLine.canceled -= instance.OnNextLine;
        }

        public void RemoveCallbacks(IDialogueReadingActions instance)
        {
            if (m_Wrapper.m_DialogueReadingActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDialogueReadingActions instance)
        {
            foreach (var item in m_Wrapper.m_DialogueReadingActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DialogueReadingActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DialogueReadingActions @DialogueReading => new DialogueReadingActions(this);

    // InventorySelect
    private readonly InputActionMap m_InventorySelect;
    private List<IInventorySelectActions> m_InventorySelectActionsCallbackInterfaces = new List<IInventorySelectActions>();
    private readonly InputAction m_InventorySelect_SelectByNumbers;
    private readonly InputAction m_InventorySelect_MouseWheel;
    public struct InventorySelectActions
    {
        private @PlayerInput m_Wrapper;
        public InventorySelectActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @SelectByNumbers => m_Wrapper.m_InventorySelect_SelectByNumbers;
        public InputAction @MouseWheel => m_Wrapper.m_InventorySelect_MouseWheel;
        public InputActionMap Get() { return m_Wrapper.m_InventorySelect; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InventorySelectActions set) { return set.Get(); }
        public void AddCallbacks(IInventorySelectActions instance)
        {
            if (instance == null || m_Wrapper.m_InventorySelectActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InventorySelectActionsCallbackInterfaces.Add(instance);
            @SelectByNumbers.started += instance.OnSelectByNumbers;
            @SelectByNumbers.performed += instance.OnSelectByNumbers;
            @SelectByNumbers.canceled += instance.OnSelectByNumbers;
            @MouseWheel.started += instance.OnMouseWheel;
            @MouseWheel.performed += instance.OnMouseWheel;
            @MouseWheel.canceled += instance.OnMouseWheel;
        }

        private void UnregisterCallbacks(IInventorySelectActions instance)
        {
            @SelectByNumbers.started -= instance.OnSelectByNumbers;
            @SelectByNumbers.performed -= instance.OnSelectByNumbers;
            @SelectByNumbers.canceled -= instance.OnSelectByNumbers;
            @MouseWheel.started -= instance.OnMouseWheel;
            @MouseWheel.performed -= instance.OnMouseWheel;
            @MouseWheel.canceled -= instance.OnMouseWheel;
        }

        public void RemoveCallbacks(IInventorySelectActions instance)
        {
            if (m_Wrapper.m_InventorySelectActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInventorySelectActions instance)
        {
            foreach (var item in m_Wrapper.m_InventorySelectActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InventorySelectActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InventorySelectActions @InventorySelect => new InventorySelectActions(this);
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnSneak(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
        void OnUseItem(InputAction.CallbackContext context);
    }
    public interface IDialogueSelectionActions
    {
        void OnChoiceByNumbers(InputAction.CallbackContext context);
        void OnSubmitSelection(InputAction.CallbackContext context);
        void OnSelectUpper(InputAction.CallbackContext context);
        void OnSelectBottom(InputAction.CallbackContext context);
    }
    public interface IDialogueReadingActions
    {
        void OnNextLine(InputAction.CallbackContext context);
    }
    public interface IInventorySelectActions
    {
        void OnSelectByNumbers(InputAction.CallbackContext context);
        void OnMouseWheel(InputAction.CallbackContext context);
    }
}
